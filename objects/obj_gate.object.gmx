<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gate</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variable (txts)
count = 0;
book = 0;
bk_instance = false;
has_book = false;
collided = false;

txt1 = "A chave para abrir este portão é uma VARIÁVEL!#
Uma VARIÁVEL em lógica de programação trata-se de um objeto ou uma posição
na memória do computador capaz de armazenar um valor ou uma expressão por
um determinado espaço de tempo.
#Pressione ENTER &gt;&gt;&gt;";

txt2 = "VARIÁVEIS são muito importantes quando falamos em desenvolver uma
aplicação, pois com elas nós podemos armazenar um valor específico que será
utilizado pelo nosso programa em um certo momento.
#Pressione ENTER &gt;&gt;&gt;";

txt3 = "Vamos imaginar uma calculadora que some 2 números inteiros.
Para realizar a soma, você precisa de algumas VARIÁVEIS:
#Pressione ENTER &gt;&gt;&gt;";

txt4 = "Uma para armazenar o primeiro número,
uma para armazenar o segundo número,
e ainda uma terceira para armazenar o resultado da soma.
#Pressione ENTER &gt;&gt;&gt;";

txt5 = "Por exemplo:
num1 = 2;
num2 = 2;
soma = num1 + num2;
O resultado dessa soma será igual à 4, ou seja, este seria o valor que o
programa, a calculadora no nosso caso, retornaria ao usuário.
#Pressione ENTER &gt;&gt;&gt;";

txt6 = "Como você pode perceber, variáveis devem ser associadas à um nome,
que chamamos de identificador. No nosso exemplo, a primeira VARIÁVEL foi
chamada de 'num1', a segunda foi chamada de 'num2' e a VARIÁVEL responsável
por armazenar o resultado da soma foi chamada de 'soma'. Os nomes geralmente
podem ser escolhidos à gosto, mas lembre-se, é importante escolher um nome
para a VARIÁVEL que facilite a compreensão de quem estará lendo o nosso
código, para evitar confusões.
#Pressione ENTER &gt;&gt;&gt;";

txt7 = "VARIÁVEIS também possuem TIPOS diferentes!
Por exemplo, uma VARIÁVEL pode ser do tipo:#
INTEIRO (armazena numeros inteiros),
DECIMAL (armazena números decimais),
STRING (armazena caracteres em geral, como textos),
LÓGICO (armazena os valores lógicos VERDADEIRO ou FALSO).
#Pressione ENTER &gt;&gt;&gt;";

txt8 = "Está vendo estes livros que apareceram no labirinto?
Eles representam tipos de VARIÁVEIS, sendo cada um de um tipo diferente,
INTEIRO, DECIMAL e STRING. Parece que para abrir este portão você precisa
descobrir qual o tipo de VARIÁVEL que melhor se encaixa no exemplo a seguir!
#Pressione ENTER &gt;&gt;&gt;";

txt9 = "var1 = 5;
var2 = 6;
resultado = var1 + var2;#
Qual é o tipo de VARIÁVEL que melhor corresponde às VARIÁVEIS do código
acima? Colete o livro correto e traga para este portão a chave para o
próximo nível!
#Pressione ENTER...";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm text
has_collided = false;

if(has_collided != true){
        if(collided = true) {
        switch(count) {
            case 1:
            scr_text(txt1, 1, 150, 100);
            count++;
            break;
        
            case 2:
            scr_text(txt2, 1, 150, 100);
            count++;
            break;
        
            case 3:
            scr_text(txt3, 1, 150, 100);
            count++;
            break;
            
            case 4:
            scr_text(txt4, 1, 150, 100);
            count++;
            break;
            
            case 5:
            scr_text(txt5, 1, 150, 100);
            count++;
            break;
            
            case 6:
            scr_text(txt6, 1, 150, 100);
            count++;
            break;
            
            case 7:
            scr_text(txt7, 1, 150, 100);
            count++;
            break;
            
            case 8:
            scr_text(txt8, 1, 150, 100);
            count++;
            break;
            
            case 9:
            scr_text(txt9, 1, 150, 100);
            count++;
            break;
        }
    }
}
has_collided = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_char">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create book instance
if(bk_instance = false){

    bk_instance = true;

    instance_create(96, 96, obj_book_blue_int);
    instance_create(448, 448, obj_book_blue_float);
    instance_create(512, 448, obj_book_blue_string);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn txt / Check book

    if (has_book = false) {
        count = 0;
        if (count = 0) {
            scr_text("Este portão está bloqueando a passagem!
Você precisa realizar uma tarefa para abrir o portão e
liberar a passagem rumo a saída deste nível.
#Pressione ENTER &gt;&gt;&gt;", 1, 250, 100);
            collided = true;
            count = 1;
        }
    } else if (book = 1){
            show_message("Confirme para usar a VARIÁVEL.");
            audio_play_sound(snd_gate,0,false);
            instance_destroy(); //adicionar animação?
            with (obj_book_blue_float) {
                instance_destroy();
            }
            with (obj_book_blue_string) {
                instance_destroy();
            }
            scr_text("Parabéns! As VARIÁVEIS 'var1' e 'var2'
armazenavam os números '5' e '6' respectivamente, e a VARIÁVEL
'resultado' armazenava a soma desses 2 números, que são números
inteiros, portanto você acertou! O tipo de VARIÁVEL que se encaixa
no desafio é a VARIÁVEL do tipo INTEIRO!
Encoste no portal e vamos para o próximo nível!
#Pressione ENTER...", 1, 250, 100);
            book = 0;            
    } else if(book = 2) {
            show_message("Confirme para usar a VARIÁVEL.");
            scr_text("Ops! Parece que este não é o livro correto.
Por favor, tente novamente.
#Pressione ENTER...", 1, 250, 100);
            instance_create(448, 448, obj_book_blue_float);
            obj_book_blue_float.visible = true;
            has_book = false;
            book = 0;
    } else if(book = 3) {
            show_message("Confirme para usar a VARIÁVEL.");
            scr_text("Ops! Parece que este não é o livro correto.
Por favor, tente novamente.
#Pressione ENTER...", 1, 250, 100);            
            instance_create(512, 448, obj_book_blue_string);
            obj_book_blue_string.visible = true;
            has_book = false;
            book = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm text
if (alarm[0] = -1) {
    alarm = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
